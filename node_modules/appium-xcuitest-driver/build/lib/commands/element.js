'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var _appiumIosDriver = require('appium-ios-driver');

var _appiumSupport = require('appium-support');

var _asyncbox = require('asyncbox');

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var commands = {},
    extensions = {};
_Object$assign(extensions, _appiumIosDriver.iosCommands.element);

commands.getAttribute = function callee$0$0(attribute, el) {
  var atomsElement;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = _appiumSupport.util.unwrapElement(el);

        if (this.isWebContext()) {
          context$1$0.next = 5;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + el + '/attribute/' + attribute, 'GET'));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
        atomsElement = this.getAtomsElement(el);

        if (!_lodash2['default'].isNull(atomsElement)) {
          context$1$0.next = 10;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + el);

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.executeAtom('get_attribute_value', [atomsElement, attribute]));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getText = function callee$0$0(el) {
  var atomsElement;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = _appiumSupport.util.unwrapElement(el);

        if (this.isWebContext()) {
          context$1$0.next = 5;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + el + '/text', 'GET'));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.executeAtom('get_text', [atomsElement]));

      case 8:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getRect = function callee$0$0(el) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = _appiumSupport.util.unwrapElement(el);

        if (!this.isWebContext()) {
          context$1$0.next = 5;
          break;
        }

        throw new _appiumBaseDriver.errors.NotYetImplementedError('Support for getRect for webcontext is not yet implemented. Please contact an Appium dev');

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + el + '/rect', 'GET'));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocation = function callee$0$0(el) {
  var atomsElement, rect;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = el.ELEMENT ? el.ELEMENT : el;

        if (!this.isWebContext()) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.useAtomsElement(el));

      case 4:
        atomsElement = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeAtom('get_top_left_coordinates', [atomsElement]));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.getRect(el));

      case 12:
        rect = context$1$0.sent;
        return context$1$0.abrupt('return', { x: rect.x, y: rect.y });

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocationInView = function callee$0$0(el) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getLocation(el));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getSize = function callee$0$0(el) {
  var atomsElement, rect;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = el.ELEMENT ? el.ELEMENT : el;

        if (!this.isWebContext()) {
          context$1$0.next = 12;
          break;
        }

        atomsElement = this.getAtomsElement(el);

        if (!(atomsElement === null)) {
          context$1$0.next = 7;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + el + '\'');

      case 7:
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(this.executeAtom('get_size', [atomsElement]));

      case 9:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 16;
        break;

      case 12:
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(this.getRect(el));

      case 14:
        rect = context$1$0.sent;
        return context$1$0.abrupt('return', { width: rect.width, height: rect.height });

      case 16:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

function hasSpecialKeys(keys) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = _getIterator(keys), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var char = _step.value;

      if (isSpecialKey(char)) return true;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}

function isSpecialKey(k) {
  if (k === '' || k === '') // BACKSPACE or DELETE
    return true;else if (k === '' || k === '') // RETURN or ENTER
    return true;
  return false;
}

function translateKey(k) {
  if (k === '' || k === '') {
    // RETURN or ENTER
    return '\n';
  } else if (k === '' || k === '') {
    // BACKSPACE or DELETE
    return '\b';
  }
  return k;
}

extensions.bringUpKeyboard = function callee$0$0(element) {
  var implicitWaitMs;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        implicitWaitMs = this.implicitWaitMs;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.setImplicitWait(0));

      case 3:
        context$1$0.prev = 3;
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap((0, _asyncbox.retryInterval)(10, 10, function callee$1$0() {
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.prev = 0;
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeKeyboard', false));

              case 3:
                _logger2['default'].debug('Keyboard found. Continuing with text input.');
                context$2$0.next = 13;
                break;

              case 6:
                context$2$0.prev = 6;
                context$2$0.t0 = context$2$0['catch'](0);

                // no keyboard found
                _logger2['default'].debug('No keyboard found. Clicking element to open it.');
                context$2$0.next = 11;
                return _regeneratorRuntime.awrap(this.nativeClick(element));

              case 11:
                context$2$0.next = 13;
                return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeKeyboard', false));

              case 13:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this, [[0, 6]]);
        }));

      case 6:
        context$1$0.prev = 6;
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(this.setImplicitWait(implicitWaitMs));

      case 9:
        return context$1$0.finish(6);

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[3,, 6, 10]]);
};

commands.setValueImmediate = function callee$0$0(value, el) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        // WDA does not provide no way to set the value directly
        _logger2['default'].info('There is currently no way to bypass typing using XCUITest. Setting value through keyboard');
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.setValue(value, el));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValue = function callee$0$0(value, el) {
  var atomsElement, setFormattedValue, buffer, isFirstChar, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, k, char;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this2 = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = _appiumSupport.util.unwrapElement(el);

        if (!this.isWebContext()) {
          context$1$0.next = 9;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('click', [atomsElement]));

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeAtom('type', [atomsElement, value]));

      case 7:
        context$1$0.next = 54;
        break;

      case 9:
        setFormattedValue = function setFormattedValue(input, isKeyboardPresenceCheckEnabled) {
          return _regeneratorRuntime.async(function setFormattedValue$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                if (typeof input !== 'string' && !(input instanceof Array)) {
                  input = input.toString().split('');
                }
                context$2$0.prev = 1;
                context$2$0.next = 4;
                return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + el + '/value', 'POST', { value: input }));

              case 4:
                context$2$0.next = 23;
                break;

              case 6:
                context$2$0.prev = 6;
                context$2$0.t0 = context$2$0['catch'](1);
                context$2$0.t1 = isKeyboardPresenceCheckEnabled;

                if (!context$2$0.t1) {
                  context$2$0.next = 14;
                  break;
                }

                context$2$0.next = 12;
                return _regeneratorRuntime.awrap(this.getAttribute('type', el));

              case 12:
                context$2$0.t2 = context$2$0.sent;
                context$2$0.t1 = context$2$0.t2 === 'XCUIElementTypeTextField';

              case 14:
                if (!context$2$0.t1) {
                  context$2$0.next = 22;
                  break;
                }

                _logger2['default'].info('Cannot type in the text field because of ' + context$2$0.t0 + '.\nTrying to apply a workaround...');
                context$2$0.next = 18;
                return _regeneratorRuntime.awrap(this.bringUpKeyboard(el));

              case 18:
                context$2$0.next = 20;
                return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + el + '/value', 'POST', { value: input }));

              case 20:
                context$2$0.next = 23;
                break;

              case 22:
                throw context$2$0.t0;

              case 23:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this2, [[1, 6]]);
        };

        // possible values of `value`:
        //   ['some text']
        //   ['s', 'o', 'm', 'e', ' ', 't', 'e', 'x', 't']
        //   'some text'
        if (typeof value === 'string') {
          // plain string, so make it into an array of characters
          value = value.toString().split('');
        } else if (Array.isArray(value)) {
          // make sure that all the strings inside are a single character long
          value = _lodash2['default'].flatMap(value, function (v) {
            return v.split('');
          });
        }

        if (hasSpecialKeys(value)) {
          context$1$0.next = 15;
          break;
        }

        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(setFormattedValue(value, true));

      case 14:
        return context$1$0.abrupt('return');

      case 15:
        buffer = [];
        isFirstChar = true;
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 20;
        _iterator2 = _getIterator(value);

      case 22:
        if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
          context$1$0.next = 37;
          break;
        }

        k = _step2.value;
        char = translateKey(k);

        if (!(char === k)) {
          context$1$0.next = 28;
          break;
        }

        buffer.push(char);
        return context$1$0.abrupt('continue', 34);

      case 28:
        context$1$0.next = 30;
        return _regeneratorRuntime.awrap(setFormattedValue(buffer, isFirstChar));

      case 30:
        isFirstChar = false;
        buffer = [];

        // write the character
        context$1$0.next = 34;
        return _regeneratorRuntime.awrap(setFormattedValue([char], isFirstChar));

      case 34:
        _iteratorNormalCompletion2 = true;
        context$1$0.next = 22;
        break;

      case 37:
        context$1$0.next = 43;
        break;

      case 39:
        context$1$0.prev = 39;
        context$1$0.t0 = context$1$0['catch'](20);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 43:
        context$1$0.prev = 43;
        context$1$0.prev = 44;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 46:
        context$1$0.prev = 46;

        if (!_didIteratorError2) {
          context$1$0.next = 49;
          break;
        }

        throw _iteratorError2;

      case 49:
        return context$1$0.finish(46);

      case 50:
        return context$1$0.finish(43);

      case 51:
        if (!buffer.length) {
          context$1$0.next = 54;
          break;
        }

        context$1$0.next = 54;
        return _regeneratorRuntime.awrap(setFormattedValue(buffer, false));

      case 54:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[20, 39, 43, 51], [44,, 46, 50]]);
};

commands.keys = function callee$0$0(value) {
  var buffer, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, k, char;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_lodash2['default'].isArray(value)) {
          // concatenate any individual strings
          value = value.join('');
        }
        if (_lodash2['default'].isString(value)) {
          // split into component characters
          value = value.split('');
        }

        buffer = [];
        _iteratorNormalCompletion3 = true;
        _didIteratorError3 = false;
        _iteratorError3 = undefined;
        context$1$0.prev = 6;

        for (_iterator3 = _getIterator(value); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          k = _step3.value;
          char = translateKey(k);

          buffer.push(char);
        }
        context$1$0.next = 14;
        break;

      case 10:
        context$1$0.prev = 10;
        context$1$0.t0 = context$1$0['catch'](6);
        _didIteratorError3 = true;
        _iteratorError3 = context$1$0.t0;

      case 14:
        context$1$0.prev = 14;
        context$1$0.prev = 15;

        if (!_iteratorNormalCompletion3 && _iterator3['return']) {
          _iterator3['return']();
        }

      case 17:
        context$1$0.prev = 17;

        if (!_didIteratorError3) {
          context$1$0.next = 20;
          break;
        }

        throw _iteratorError3;

      case 20:
        return context$1$0.finish(17);

      case 21:
        return context$1$0.finish(14);

      case 22:
        context$1$0.next = 24;
        return _regeneratorRuntime.awrap(this.proxyCommand('/wda/keys', 'POST', { value: buffer }));

      case 24:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[6, 10, 14, 22], [15,, 17, 21]]);
};

_Object$assign(extensions, commands);
exports.commands = commands;
exports['default'] = extensions;

// sometimes input is attempted before we have a keyboard. Try to bring one up
// but we want to handle the retries on find

// no matter what we do, make sure we have the implicit wait set up correctly

// make sure there is a keyboard if this is a text field

// nothing special, so just send it in

// if there are special characters, go through the value until we get to one,
// and then print it individually
// currently only supporting return, enter, backspace, and delete

// write and clear the buffer

// finally, send anything that might be left
//# sourceMappingURL=data:application/json;charset=utf8;base64,
