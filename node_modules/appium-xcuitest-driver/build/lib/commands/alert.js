'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var commands = {},
    helpers = {},
    extensions = {};

commands.getAlertText = function callee$0$0() {
  var _alert, text, method, endpoint;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.getAlert());

      case 3:
        _alert = context$1$0.sent;
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_alert.getText());

      case 6:
        text = context$1$0.sent;
        return context$1$0.abrupt('return', text);

      case 8:
        method = 'GET';
        endpoint = '/alert/text';
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.proxyCommand(endpoint, method));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

// TODO: WDA does not currently support this natively
commands.setAlertText = function callee$0$0(text) {
  var _alert2, method, endpoint;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!Array.isArray(text)) {
          text = text.split('');
        }

        if (!this.isWebContext()) {
          context$1$0.next = 8;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getAlert());

      case 4:
        _alert2 = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_alert2.setText(text));

      case 7:
        return context$1$0.abrupt('return');

      case 8:
        method = 'POST';
        endpoint = '/alert/text';
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.proxyCommand(endpoint, method, text));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.postAcceptAlert = function callee$0$0() {
  var _alert3, method, endpoint;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebContext()) {
          context$1$0.next = 12;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.getAlert());

      case 3:
        _alert3 = context$1$0.sent;

        if (!_alert3.close) {
          context$1$0.next = 9;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_alert3.close());

      case 7:
        context$1$0.next = 11;
        break;

      case 9:
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(_alert3.ok());

      case 11:
        return context$1$0.abrupt('return');

      case 12:
        method = 'POST';
        endpoint = '/alert/accept';
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(this.proxyCommand(endpoint, method));

      case 16:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 17:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.postDismissAlert = function callee$0$0() {
  var _alert4, method, endpoint;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebContext()) {
          context$1$0.next = 12;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.getAlert());

      case 3:
        _alert4 = context$1$0.sent;

        if (!_alert4.close) {
          context$1$0.next = 9;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_alert4.close());

      case 7:
        context$1$0.next = 11;
        break;

      case 9:
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(_alert4.cancel());

      case 11:
        return context$1$0.abrupt('return');

      case 12:
        method = 'POST';
        endpoint = '/alert/dismiss';
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(this.proxyCommand(endpoint, method));

      case 16:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 17:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.getAlert = function callee$0$0() {
  var possibleAlert, possibleAlertButtons, assertButtonName, alert;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeScrollView', true));

      case 2:
        possibleAlert = context$1$0.sent;

        if (!(possibleAlert.length !== 1)) {
          context$1$0.next = 5;
          break;
        }

        throw new _appiumBaseDriver.errors.NoAlertOpenError();

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeButton', true, possibleAlert[0].ELEMENT));

      case 7:
        possibleAlertButtons = context$1$0.sent;

        if (!(possibleAlertButtons.length < 1 || possibleAlertButtons.length > 2)) {
          context$1$0.next = 10;
          break;
        }

        throw new _appiumBaseDriver.errors.NoAlertOpenError();

      case 10:
        assertButtonName = function assertButtonName(button, expectedName) {
          var name;
          return _regeneratorRuntime.async(function assertButtonName$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                button = button.ELEMENT ? button.ELEMENT : button;
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + button + '/attribute/name', 'GET'));

              case 3:
                name = context$2$0.sent;

                if (!(name.toLowerCase() !== expectedName)) {
                  context$2$0.next = 6;
                  break;
                }

                throw new _appiumBaseDriver.errors.NoAlertOpenError();

              case 6:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        };

        alert = possibleAlert[0];

        if (!(possibleAlertButtons.length === 1)) {
          context$1$0.next = 17;
          break;
        }

        context$1$0.next = 15;
        return _regeneratorRuntime.awrap((function callee$1$0() {
          var closeButton;
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            var _this2 = this;

            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                closeButton = possibleAlertButtons[0];
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(assertButtonName(closeButton, 'close'));

              case 3:

                alert.close = function callee$2$0() {
                  return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
                    while (1) switch (context$3$0.prev = context$3$0.next) {
                      case 0:
                        context$3$0.next = 2;
                        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + closeButton.ELEMENT + '/click', 'POST'));

                      case 2:
                      case 'end':
                        return context$3$0.stop();
                    }
                  }, null, _this2);
                };

              case 4:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        })());

      case 15:
        context$1$0.next = 19;
        break;

      case 17:
        context$1$0.next = 19;
        return _regeneratorRuntime.awrap((function callee$1$0() {
          var cancelButton, okButton;
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            var _this3 = this;

            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                cancelButton = possibleAlertButtons[0];
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(assertButtonName(cancelButton, 'cancel'));

              case 3:
                okButton = possibleAlertButtons[1];
                context$2$0.next = 6;
                return _regeneratorRuntime.awrap(assertButtonName(okButton, 'ok'));

              case 6:

                alert.cancel = function callee$2$0() {
                  return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
                    while (1) switch (context$3$0.prev = context$3$0.next) {
                      case 0:
                        context$3$0.next = 2;
                        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + cancelButton.ELEMENT + '/click', 'POST'));

                      case 2:
                      case 'end':
                        return context$3$0.stop();
                    }
                  }, null, _this3);
                };
                alert.ok = function callee$2$0() {
                  return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
                    while (1) switch (context$3$0.prev = context$3$0.next) {
                      case 0:
                        context$3$0.next = 2;
                        return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + okButton.ELEMENT + '/click', 'POST'));

                      case 2:
                      case 'end':
                        return context$3$0.stop();
                    }
                  }, null, _this3);
                };

              case 8:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        })());

      case 19:

        alert.getText = function callee$1$0() {
          var textView;
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.next = 2;
                return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeTextView', false, alert.ELEMENT));

              case 2:
                textView = context$2$0.sent;
                context$2$0.next = 5;
                return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + textView.ELEMENT + '/attribute/value', 'GET'));

              case 5:
                return context$2$0.abrupt('return', context$2$0.sent);

              case 6:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        };
        alert.setText = function callee$1$0(value) {
          var textView;
          return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.prev = 0;
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(this.findNativeElementOrElements('class name', 'XCUIElementTypeTextField', false, alert.ELEMENT));

              case 3:
                textView = context$2$0.sent;
                context$2$0.next = 6;
                return _regeneratorRuntime.awrap(this.proxyCommand('/element/' + textView.ELEMENT + '/value ', 'POST', { value: value }));

              case 6:
                context$2$0.next = 13;
                break;

              case 8:
                context$2$0.prev = 8;
                context$2$0.t0 = context$2$0['catch'](0);

                if (!(0, _appiumBaseDriver.isErrorType)(context$2$0.t0, _appiumBaseDriver.errors.NoSuchElementError)) {
                  context$2$0.next = 12;
                  break;
                }

                throw new Error('Tried to set text of an alert that was not a prompt');

              case 12:
                throw context$2$0.t0;

              case 13:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this, [[0, 8]]);
        };

        return context$1$0.abrupt('return', alert);

      case 22:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

// make sure the button is 'Close'

// ensure the buttons are 'Cancel' and 'OK'
//# sourceMappingURL=data:application/json;charset=utf8;base64,
