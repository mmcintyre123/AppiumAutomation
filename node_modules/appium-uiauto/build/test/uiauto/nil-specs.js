require('source-map-support').install();

/* globals $ */

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _base = require('./base');

describe('nil', function () {
  var _this = this;

  var imports = { post: ['uiauto/lib/element-patch/nil-patch.js', 'uiauto/lib/mechanic-ext/basics-ext.js'] };
  (0, _base.globalInit)(this, { imports: imports, bootstrap: 'basic' });
  var ctx = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _base.instrumentsInstanceInit)());

        case 2:
          ctx = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _base.killAll)(ctx));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            $('#UICatalog').first().tap();
            $.delay(1000);
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for not nil elements', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $('cell')[0].isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['false'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for nil elements', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $('cell')[0].images().isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['true'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('isNil should return true for manually created UIAElementNil', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(ctx.execFunc(function () {
            return $.nil.isNil();
          }));

        case 2:
          res = context$2$0.sent;

          res.should.be['true'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdWlhdXRvL25pbC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O29CQUc2RCxRQUFROztBQUdyRSxRQUFRLENBQUMsS0FBSyxFQUFFLFlBQVk7OztBQUMxQixNQUFJLE9BQU8sR0FBRyxFQUFFLElBQUksRUFBRSxDQUNwQix1Q0FBdUMsRUFDdkMsdUNBQXVDLENBQ3hDLEVBQUMsQ0FBQztBQUNILHdCQUFXLElBQUksRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDekQsTUFBSSxHQUFHLFlBQUEsQ0FBQztBQUNSLFFBQU0sQ0FBQzs7Ozs7MkNBQ08sb0NBQXlCOzs7QUFBckMsYUFBRzs7Ozs7OztHQUNKLENBQUMsQ0FBQztBQUNILE9BQUssQ0FBQzs7Ozs7MkNBQ0UsbUJBQVEsR0FBRyxDQUFDOzs7Ozs7O0dBQ25CLENBQUMsQ0FBQzs7QUFFSCxXQUFTLENBQUM7Ozs7OzJDQUNGLEdBQUcsQ0FBQyxRQUFRLENBQ2hCLFlBQVk7QUFDVixhQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDOUIsYUFBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztXQUNmLENBQ0Y7Ozs7Ozs7R0FDRixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLCtDQUErQyxFQUFFO1FBQzlDLEdBQUc7Ozs7OzJDQUFTLEdBQUcsQ0FBQyxRQUFRLENBQzFCLFlBQVk7QUFDVixtQkFBTyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7V0FDN0IsQ0FDRjs7O0FBSkcsYUFBRzs7QUFLUCxhQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsU0FBTSxDQUFDOzs7Ozs7O0dBQ3JCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsMkNBQTJDLEVBQUU7UUFDMUMsR0FBRzs7Ozs7MkNBQVMsR0FBRyxDQUFDLFFBQVEsQ0FDMUIsWUFBWTtBQUNWLG1CQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztXQUN0QyxDQUNGOzs7QUFKRyxhQUFHOztBQUtQLGFBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFLLENBQUM7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyw2REFBNkQsRUFBRTtRQUM1RCxHQUFHOzs7OzsyQ0FBUyxHQUFHLENBQUMsUUFBUSxDQUMxQixZQUFZO0FBQ1YsbUJBQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztXQUN0QixDQUNGOzs7QUFKRyxhQUFHOztBQUtQLGFBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFLLENBQUM7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvdWlhdXRvL25pbC1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuLyogZ2xvYmFscyAkICovXG5cbmltcG9ydCB7IGluc3RydW1lbnRzSW5zdGFuY2VJbml0LCBnbG9iYWxJbml0LCBraWxsQWxsIH0gZnJvbSAnLi9iYXNlJztcblxuXG5kZXNjcmliZSgnbmlsJywgZnVuY3Rpb24gKCkge1xuICBsZXQgaW1wb3J0cyA9IHsgcG9zdDogW1xuICAgICd1aWF1dG8vbGliL2VsZW1lbnQtcGF0Y2gvbmlsLXBhdGNoLmpzJyxcbiAgICAndWlhdXRvL2xpYi9tZWNoYW5pYy1leHQvYmFzaWNzLWV4dC5qcydcbiAgXX07XG4gIGdsb2JhbEluaXQodGhpcywge2ltcG9ydHM6IGltcG9ydHMsIGJvb3RzdHJhcDogJ2Jhc2ljJ30pO1xuICBsZXQgY3R4O1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGN0eCA9IGF3YWl0IGluc3RydW1lbnRzSW5zdGFuY2VJbml0KCk7XG4gIH0pO1xuICBhZnRlcihhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQga2lsbEFsbChjdHgpO1xuICB9KTtcblxuICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGN0eC5leGVjRnVuYyhcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJCgnI1VJQ2F0YWxvZycpLmZpcnN0KCkudGFwKCk7XG4gICAgICAgICQuZGVsYXkoMTAwMCk7XG4gICAgICB9XG4gICAgKTtcbiAgfSk7XG5cbiAgaXQoJ2lzTmlsIHNob3VsZCByZXR1cm4gdHJ1ZSBmb3Igbm90IG5pbCBlbGVtZW50cycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgcmVzID0gYXdhaXQgY3R4LmV4ZWNGdW5jKFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJCgnY2VsbCcpWzBdLmlzTmlsKCk7XG4gICAgICB9XG4gICAgKTtcbiAgICByZXMuc2hvdWxkLmJlLmZhbHNlO1xuICB9KTtcblxuICBpdCgnaXNOaWwgc2hvdWxkIHJldHVybiB0cnVlIGZvciBuaWwgZWxlbWVudHMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHJlcyA9IGF3YWl0IGN0eC5leGVjRnVuYyhcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICQoJ2NlbGwnKVswXS5pbWFnZXMoKS5pc05pbCgpO1xuICAgICAgfVxuICAgICk7XG4gICAgcmVzLnNob3VsZC5iZS50cnVlO1xuICB9KTtcblxuICBpdCgnaXNOaWwgc2hvdWxkIHJldHVybiB0cnVlIGZvciBtYW51YWxseSBjcmVhdGVkIFVJQUVsZW1lbnROaWwnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHJlcyA9IGF3YWl0IGN0eC5leGVjRnVuYyhcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICQubmlsLmlzTmlsKCk7XG4gICAgICB9XG4gICAgKTtcbiAgICByZXMuc2hvdWxkLmJlLnRydWU7XG4gIH0pO1xufSk7XG4iXX0=