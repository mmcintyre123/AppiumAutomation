require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _libDriver = require('../../../lib/driver');

var _libUtils = require('../../../lib/utils');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('driver', function () {
  var _this = this;

  this.timeout(120000);
  var driver = undefined;
  it('should start', function callee$1$0() {
    var caps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          caps = {
            app: _path2['default'].resolve(_libUtils.rootDir, 'test', 'assets', 'TestApp.zip'),
            platformName: 'iOS',
            showIOSLog: false,
            fullReset: true,
            newCommandTimeout: 120
          };

          caps = _lodash2['default'].merge({}, _helpersEnv2['default'].CAPS, caps);
          driver = new _libDriver.IosDriver();
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.createSession(caps));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return server details', function callee$1$0() {
    var serverCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getSession());

        case 2:
          serverCaps = context$2$0.sent;

          serverCaps.takesScreenshot.should.exist;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should stop', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(2000));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3NCQUVjLFFBQVE7Ozs7MEJBQ04sZ0JBQWdCOzs7O3lCQUNOLHFCQUFxQjs7d0JBQ3ZCLG9CQUFvQjs7b0JBQzNCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O29CQUM1QixNQUFNOzs7O3dCQUNULFVBQVU7Ozs7QUFFeEIsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsUUFBUSxFQUFFLFlBQVk7OztBQUM3QixNQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3JCLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxJQUFFLENBQUMsY0FBYyxFQUFFO1FBQ2IsSUFBSTs7OztBQUFKLGNBQUksR0FBRztBQUNULGVBQUcsRUFBRSxrQkFBSyxPQUFPLG9CQUFVLE1BQU0sRUFBRSxRQUFRLEVBQUUsYUFBYSxDQUFDO0FBQzNELHdCQUFZLEVBQUUsS0FBSztBQUNuQixzQkFBVSxFQUFFLEtBQUs7QUFDakIscUJBQVMsRUFBRSxJQUFJO0FBQ2YsNkJBQWlCLEVBQUUsR0FBRztXQUN2Qjs7QUFDRCxjQUFJLEdBQUcsb0JBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRSx3QkFBSSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbkMsZ0JBQU0sR0FBRywwQkFBZSxDQUFDOzsyQ0FDbkIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7R0FDakMsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyw4QkFBOEIsRUFBRTtRQUM3QixVQUFVOzs7OzsyQ0FBUyxNQUFNLENBQUMsVUFBVSxFQUFFOzs7QUFBdEMsb0JBQVU7O0FBQ2Qsb0JBQVUsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Ozs7OztHQUN6QyxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLGFBQWEsRUFBRTs7Ozs7MkNBQ1Ysc0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQzs7OzsyQ0FDYixNQUFNLENBQUMsYUFBYSxFQUFFOzs7Ozs7O0dBQzdCLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9kcml2ZXIvZHJpdmVyLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGVudiBmcm9tICcuLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgeyBJb3NEcml2ZXIgfSBmcm9tICcuLi8uLi8uLi9saWIvZHJpdmVyJztcbmltcG9ydCB7IHJvb3REaXIgfSBmcm9tICcuLi8uLi8uLi9saWIvdXRpbHMnO1xuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2RyaXZlcicsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KDEyMDAwMCk7XG4gIGxldCBkcml2ZXI7XG4gIGl0KCdzaG91bGQgc3RhcnQnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGNhcHMgPSB7XG4gICAgICBhcHA6IHBhdGgucmVzb2x2ZShyb290RGlyLCAndGVzdCcsICdhc3NldHMnLCAnVGVzdEFwcC56aXAnKSxcbiAgICAgIHBsYXRmb3JtTmFtZTogJ2lPUycsXG4gICAgICBzaG93SU9TTG9nOiBmYWxzZSxcbiAgICAgIGZ1bGxSZXNldDogdHJ1ZSxcbiAgICAgIG5ld0NvbW1hbmRUaW1lb3V0OiAxMjBcbiAgICB9O1xuICAgIGNhcHMgPSBfLm1lcmdlKHt9LCBlbnYuQ0FQUywgY2Fwcyk7XG4gICAgZHJpdmVyID0gbmV3IElvc0RyaXZlcigpO1xuICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKGNhcHMpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHJldHVybiBzZXJ2ZXIgZGV0YWlscycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgc2VydmVyQ2FwcyA9IGF3YWl0IGRyaXZlci5nZXRTZXNzaW9uKCk7XG4gICAgc2VydmVyQ2Fwcy50YWtlc1NjcmVlbnNob3Quc2hvdWxkLmV4aXN0O1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHN0b3AnLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgQi5kZWxheSgyMDAwKTtcbiAgICBhd2FpdCBkcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
