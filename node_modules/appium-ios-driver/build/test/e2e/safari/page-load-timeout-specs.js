'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

// TODO: fix page load handling in appium-remote-debugger
// right now it is not respected, so we need to skip
describe.skip('safari - page load timeout', function () {
  var driver = (0, _setupBase2['default'])(this, { browserName: 'safari' }).driver;

  describe('small timeout, slow page load', function () {
    var _this = this;

    it('should not go to the requested page', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.timeouts('page load', 5000));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].GUINEA_TEST_END_POINT + '?delay=30000'));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getPageSource());

          case 6:
            context$3$0.sent.should.include('Let\'s browse!');

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('no timeout, very slow page', function () {
    var _this2 = this;

    var startMs = Date.now();

    it('should go to the requested page', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.timeouts('command', 120000));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.timeouts('page load', 0));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].GUINEA_TEST_END_POINT + '?delay=5000'));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.getPageSource());

          case 8:
            context$3$0.sent.should.include('I am some page content');

            (Date.now() - startMs).should.be.above(5000);

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
});

// the page should not have time to load

// the page should load after 70000
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS9wYWdlLWxvYWQtdGltZW91dC1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7eUJBQWtCLGVBQWU7Ozs7MEJBQ2pCLGdCQUFnQjs7Ozs7O0FBS2hDLFFBQVEsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLEVBQUUsWUFBWTtBQUN0RCxNQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUUsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUM7O0FBRTdELFVBQVEsQ0FBQywrQkFBK0IsRUFBRSxZQUFZOzs7QUFDcEQsTUFBRSxDQUFDLHFDQUFxQyxFQUFFOzs7Ozs2Q0FDbEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDOzs7OzZDQUNsQyxNQUFNLENBQUMsTUFBTSxDQUFDLHdCQUFJLHFCQUFxQixHQUFHLGNBQWMsQ0FBQzs7Ozs2Q0FHeEQsTUFBTSxDQUFDLGFBQWEsRUFBRTs7OzZCQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCOzs7Ozs7O0tBQy9ELENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQzs7QUFFSCxVQUFRLENBQUMsNEJBQTRCLEVBQUUsWUFBWTs7O0FBQ2pELFFBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQzs7QUFFekIsTUFBRSxDQUFDLGlDQUFpQyxFQUFFOzs7Ozs2Q0FDOUIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDOzs7OzZDQUNsQyxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7Ozs7NkNBQy9CLE1BQU0sQ0FBQyxNQUFNLENBQUMsd0JBQUkscUJBQXFCLEdBQUcsYUFBYSxDQUFDOzs7OzZDQUd2RCxNQUFNLENBQUMsYUFBYSxFQUFFOzs7NkJBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0I7O0FBQ3RFLGFBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQSxDQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDOzs7Ozs7O0tBQzlDLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9zYWZhcmkvcGFnZS1sb2FkLXRpbWVvdXQtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2V0dXAgZnJvbSBcIi4uL3NldHVwLWJhc2VcIjtcbmltcG9ydCBlbnYgZnJvbSAnLi4vaGVscGVycy9lbnYnO1xuXG5cbi8vIFRPRE86IGZpeCBwYWdlIGxvYWQgaGFuZGxpbmcgaW4gYXBwaXVtLXJlbW90ZS1kZWJ1Z2dlclxuLy8gcmlnaHQgbm93IGl0IGlzIG5vdCByZXNwZWN0ZWQsIHNvIHdlIG5lZWQgdG8gc2tpcFxuZGVzY3JpYmUuc2tpcCgnc2FmYXJpIC0gcGFnZSBsb2FkIHRpbWVvdXQnLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGRyaXZlciA9IHNldHVwKHRoaXMsIHsgYnJvd3Nlck5hbWU6ICdzYWZhcmknIH0pLmRyaXZlcjtcblxuICBkZXNjcmliZSgnc21hbGwgdGltZW91dCwgc2xvdyBwYWdlIGxvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Nob3VsZCBub3QgZ28gdG8gdGhlIHJlcXVlc3RlZCBwYWdlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnRpbWVvdXRzKCdwYWdlIGxvYWQnLCA1MDAwKTtcbiAgICAgIGF3YWl0IGRyaXZlci5zZXRVcmwoZW52LkdVSU5FQV9URVNUX0VORF9QT0lOVCArICc/ZGVsYXk9MzAwMDAnKTtcblxuICAgICAgLy8gdGhlIHBhZ2Ugc2hvdWxkIG5vdCBoYXZlIHRpbWUgdG8gbG9hZFxuICAgICAgKGF3YWl0IGRyaXZlci5nZXRQYWdlU291cmNlKCkpLnNob3VsZC5pbmNsdWRlKCdMZXRcXCdzIGJyb3dzZSEnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ25vIHRpbWVvdXQsIHZlcnkgc2xvdyBwYWdlJywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBzdGFydE1zID0gRGF0ZS5ub3coKTtcblxuICAgIGl0KCdzaG91bGQgZ28gdG8gdGhlIHJlcXVlc3RlZCBwYWdlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnRpbWVvdXRzKCdjb21tYW5kJywgMTIwMDAwKTtcbiAgICAgIGF3YWl0IGRyaXZlci50aW1lb3V0cygncGFnZSBsb2FkJywgMCk7XG4gICAgICBhd2FpdCBkcml2ZXIuc2V0VXJsKGVudi5HVUlORUFfVEVTVF9FTkRfUE9JTlQgKyAnP2RlbGF5PTUwMDAnKTtcblxuICAgICAgLy8gdGhlIHBhZ2Ugc2hvdWxkIGxvYWQgYWZ0ZXIgNzAwMDBcbiAgICAgIChhd2FpdCBkcml2ZXIuZ2V0UGFnZVNvdXJjZSgpKS5zaG91bGQuaW5jbHVkZSgnSSBhbSBzb21lIHBhZ2UgY29udGVudCcpO1xuICAgICAgKERhdGUubm93KCkgLSBzdGFydE1zKS5zaG91bGQuYmUuYWJvdmUoNTAwMCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
