'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _setupBase = require('../../setup-base');

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _helpersWebview = require('../../helpers/webview');

describe('safari - webview - special capabilities', function () {
  this.timeout(120 * 1000);
  describe('safariIgnoreFraudWarning', function () {
    describe('true', function () {
      var _this = this;

      var specialCaps = _Object$assign({}, _desired2['default']);
      specialCaps.safariIgnoreFraudWarning = true;

      var driver = (0, _setupBase2['default'])(this, specialCaps).driver;
      before(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(specialCaps, driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });

      // iOS8 currently does not disable the phishing warning for foo:bar@ type
      // addresses, even when running the sim manually
      // TODO: find another way to trigger the phishing warning that IS disabled
      // by the pref on iOS8
      it('should not display a phishing warning with safariIgnoreFraudWarning @skip-ios8', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          var _this2 = this;

          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].PHISHING_END_POINT + 'guinea-pig2.html'));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$4$0() {
                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(driver.getTitle());

                    case 2:
                      context$5$0.sent.should.contain("I am another page title");

                    case 3:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, _this2);
              }));

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });

    describe('false', function () {
      var _this3 = this;

      var specialCaps = _Object$assign({}, _desired2['default']);
      specialCaps.safariIgnoreFraudWarning = false;

      var driver = (0, _setupBase2['default'])(this, specialCaps).driver;
      before(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(specialCaps, driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });

      // iOS8 currently does not disable the phishing warning for foo:bar@ type
      // addresses, even when running the sim manually
      // TODO: find another way to trigger the phishing warning that IS disabled
      // by the pref on iOS8
      it('should display a phishing warning with safariIgnoreFraudWarning @skip-ios8', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          var _this4 = this;

          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].PHISHING_END_POINT + 'guinea-pig2.html'));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$4$0() {
                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(driver.getTitle());

                    case 2:
                      context$5$0.sent.toLowerCase().should.contain("phishing");

                    case 3:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, _this4);
              }));

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93ZWJ2aWV3L3NwZWNpYWwtY2Fwcy1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozt1QkFBb0IsV0FBVzs7Ozt5QkFDYixrQkFBa0I7Ozs7MEJBQ3BCLG1CQUFtQjs7Ozs4QkFDRyx1QkFBdUI7O0FBRzdELFFBQVEsQ0FBQyx5Q0FBeUMsRUFBRSxZQUFZO0FBQzlELE1BQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3pCLFVBQVEsQ0FBQywwQkFBMEIsRUFBRSxZQUFZO0FBQy9DLFlBQVEsQ0FBQyxNQUFNLEVBQUUsWUFBWTs7O0FBQzNCLFVBQUksV0FBVyxHQUFHLGVBQWMsRUFBRSx1QkFBVSxDQUFDO0FBQzdDLGlCQUFXLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxDQUFDOztBQUU1QyxVQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQy9DLFlBQU0sQ0FBQzs7Ozs7K0NBQWtCLGlDQUFZLFdBQVcsRUFBRSxNQUFNLENBQUM7Ozs7Ozs7Ozs7T0FBQSxDQUFDLENBQUM7Ozs7OztBQU0zRCxRQUFFLENBQUMsZ0ZBQWdGLEVBQUU7Ozs7Ozs7K0NBQzdFLE1BQU0sQ0FBQyxNQUFNLENBQUMsd0JBQUksa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7Ozs7K0NBQzFELDhCQUFTOzs7Ozt1REFDTixNQUFNLENBQUMsUUFBUSxFQUFFOzs7dUNBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUI7Ozs7Ozs7ZUFDbkUsQ0FBQzs7Ozs7OztPQUNILENBQUMsQ0FBQztLQUNKLENBQUMsQ0FBQzs7QUFFSCxZQUFRLENBQUMsT0FBTyxFQUFFLFlBQVk7OztBQUM1QixVQUFJLFdBQVcsR0FBRyxlQUFjLEVBQUUsdUJBQVUsQ0FBQztBQUM3QyxpQkFBVyxDQUFDLHdCQUF3QixHQUFHLEtBQUssQ0FBQzs7QUFFN0MsVUFBTSxNQUFNLEdBQUcsNEJBQU0sSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUMvQyxZQUFNLENBQUM7Ozs7OytDQUFrQixpQ0FBWSxXQUFXLEVBQUUsTUFBTSxDQUFDOzs7Ozs7Ozs7O09BQUEsQ0FBQyxDQUFDOzs7Ozs7QUFNM0QsUUFBRSxDQUFDLDRFQUE0RSxFQUFFOzs7Ozs7OytDQUN6RSxNQUFNLENBQUMsTUFBTSxDQUFDLHdCQUFJLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDOzs7OytDQUMxRCw4QkFBUzs7Ozs7dURBQ04sTUFBTSxDQUFDLFFBQVEsRUFBRTs7O3VDQUFFLFdBQVcsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVU7Ozs7Ozs7ZUFDbEUsQ0FBQzs7Ozs7OztPQUNILENBQUMsQ0FBQztLQUNKLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9zYWZhcmkvd2Vidmlldy9zcGVjaWFsLWNhcHMtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVzaXJlZCBmcm9tICcuL2Rlc2lyZWQnO1xuaW1wb3J0IHNldHVwIGZyb20gJy4uLy4uL3NldHVwLWJhc2UnO1xuaW1wb3J0IGVudiBmcm9tICcuLi8uLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgeyBsb2FkV2ViVmlldywgc3BpbldhaXQgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3dlYnZpZXcnO1xuXG5cbmRlc2NyaWJlKCdzYWZhcmkgLSB3ZWJ2aWV3IC0gc3BlY2lhbCBjYXBhYmlsaXRpZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dCgxMjAgKiAxMDAwKTtcbiAgZGVzY3JpYmUoJ3NhZmFyaUlnbm9yZUZyYXVkV2FybmluZycsIGZ1bmN0aW9uICgpIHtcbiAgICBkZXNjcmliZSgndHJ1ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGxldCBzcGVjaWFsQ2FwcyA9IE9iamVjdC5hc3NpZ24oe30sIGRlc2lyZWQpO1xuICAgICAgc3BlY2lhbENhcHMuc2FmYXJpSWdub3JlRnJhdWRXYXJuaW5nID0gdHJ1ZTtcblxuICAgICAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywgc3BlY2lhbENhcHMpLmRyaXZlcjtcbiAgICAgIGJlZm9yZShhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhzcGVjaWFsQ2FwcywgZHJpdmVyKSk7XG5cbiAgICAgIC8vIGlPUzggY3VycmVudGx5IGRvZXMgbm90IGRpc2FibGUgdGhlIHBoaXNoaW5nIHdhcm5pbmcgZm9yIGZvbzpiYXJAIHR5cGVcbiAgICAgIC8vIGFkZHJlc3NlcywgZXZlbiB3aGVuIHJ1bm5pbmcgdGhlIHNpbSBtYW51YWxseVxuICAgICAgLy8gVE9ETzogZmluZCBhbm90aGVyIHdheSB0byB0cmlnZ2VyIHRoZSBwaGlzaGluZyB3YXJuaW5nIHRoYXQgSVMgZGlzYWJsZWRcbiAgICAgIC8vIGJ5IHRoZSBwcmVmIG9uIGlPUzhcbiAgICAgIGl0KCdzaG91bGQgbm90IGRpc3BsYXkgYSBwaGlzaGluZyB3YXJuaW5nIHdpdGggc2FmYXJpSWdub3JlRnJhdWRXYXJuaW5nIEBza2lwLWlvczgnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IGRyaXZlci5zZXRVcmwoZW52LlBISVNISU5HX0VORF9QT0lOVCArICdndWluZWEtcGlnMi5odG1sJyk7XG4gICAgICAgIGF3YWl0IHNwaW5XYWl0KGFzeW5jICgpID0+IHtcbiAgICAgICAgICAoYXdhaXQgZHJpdmVyLmdldFRpdGxlKCkpLnNob3VsZC5jb250YWluKFwiSSBhbSBhbm90aGVyIHBhZ2UgdGl0bGVcIik7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnZmFsc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgc3BlY2lhbENhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBkZXNpcmVkKTtcbiAgICAgIHNwZWNpYWxDYXBzLnNhZmFyaUlnbm9yZUZyYXVkV2FybmluZyA9IGZhbHNlO1xuXG4gICAgICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCBzcGVjaWFsQ2FwcykuZHJpdmVyO1xuICAgICAgYmVmb3JlKGFzeW5jICgpID0+IGF3YWl0IGxvYWRXZWJWaWV3KHNwZWNpYWxDYXBzLCBkcml2ZXIpKTtcblxuICAgICAgLy8gaU9TOCBjdXJyZW50bHkgZG9lcyBub3QgZGlzYWJsZSB0aGUgcGhpc2hpbmcgd2FybmluZyBmb3IgZm9vOmJhckAgdHlwZVxuICAgICAgLy8gYWRkcmVzc2VzLCBldmVuIHdoZW4gcnVubmluZyB0aGUgc2ltIG1hbnVhbGx5XG4gICAgICAvLyBUT0RPOiBmaW5kIGFub3RoZXIgd2F5IHRvIHRyaWdnZXIgdGhlIHBoaXNoaW5nIHdhcm5pbmcgdGhhdCBJUyBkaXNhYmxlZFxuICAgICAgLy8gYnkgdGhlIHByZWYgb24gaU9TOFxuICAgICAgaXQoJ3Nob3VsZCBkaXNwbGF5IGEgcGhpc2hpbmcgd2FybmluZyB3aXRoIHNhZmFyaUlnbm9yZUZyYXVkV2FybmluZyBAc2tpcC1pb3M4JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VXJsKGVudi5QSElTSElOR19FTkRfUE9JTlQgKyAnZ3VpbmVhLXBpZzIuaHRtbCcpO1xuICAgICAgICBhd2FpdCBzcGluV2FpdChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRUaXRsZSgpKS50b0xvd2VyQ2FzZSgpLnNob3VsZC5jb250YWluKFwicGhpc2hpbmdcIik7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uLy4uIn0=
