"use strict";

var _regeneratorRuntime = require("babel-runtime/regenerator")["default"];

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _helpersWebview = require("../helpers/webview");

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

describe("safari - windows and frames (" + _helpersEnv2["default"].DEVICE + ")", function () {
  var driver = (0, _setupBase2["default"])(this, {
    browserName: 'safari',
    nativeWebTap: true,
    safariAllowPopups: true
  }).driver;

  describe('within webview', function () {
    var _this = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.implicitWait(1000));

          case 2:
          case "end":
            return context$3$0.stop();
        }
      }, null, _this);
    });
    beforeEach(function () {
      return (0, _helpersWebview.loadWebView)("safari", driver);
    });

    it("should throw nosuchwindow if there's not one", function () {
      return driver.setWindow('noexistman').should.be.rejectedWith(/window could not be found/);
    });

    // unfortunately, iOS8 doesn't respond to the close() method on window
    // the way iOS7 does
    it("should be able to open and close windows @skip-ios8", function callee$2$0() {
      var el, handles;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('id', 'blanklink'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(el));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)("I am another page title", driver));

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.getWindowHandles());

          case 9:
            handles = context$3$0.sent;
            context$3$0.next = 12;
            return _regeneratorRuntime.awrap(_bluebird2["default"].delay(2000));

          case 12:
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.closeWindow());

          case 14:
            context$3$0.next = 16;
            return _regeneratorRuntime.awrap(_bluebird2["default"].delay(3000));

          case 16:
            context$3$0.next = 18;
            return _regeneratorRuntime.awrap(driver.getWindowHandles());

          case 18:
            context$3$0.t0 = handles.length;
            context$3$0.sent.length.should.be.below(context$3$0.t0);
            context$3$0.next = 22;
            return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)("I am a page title", driver));

          case 22:
          case "end":
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should be able to go back and forward', function callee$2$0() {
      var link;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

          case 2:
            link = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(link));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.findElement('id', 'only_on_page_2'));

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.back());

          case 9:
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_a_textbox'));

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.forward());

          case 13:
            context$3$0.next = 15;
            return _regeneratorRuntime.awrap(driver.findElement('id', 'only_on_page_2'));

          case 15:
          case "end":
            return context$3$0.stop();
        }
      }, null, _this);
    });

    // broken on real devices, see https://github.com/appium/appium/issues/5167
    it("should be able to open js popup windows with safariAllowPopups set to true @skip-real-device", function callee$2$0() {
      var link;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a new window link'));

          case 2:
            link = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.click(link));

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)("I am another page title", driver, 30));

          case 7:
          case "end":
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});

describe("safari - windows and frames (" + _helpersEnv2["default"].DEVICE + ") - without safariAllowPopups", function () {
  var _this2 = this;

  if (process.env.TRAVIS) this.timeout(240000);
  var driver = (0, _setupBase2["default"])(this, {
    browserName: 'safari',
    safariAllowPopups: false
  }).driver;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.implicitWait(5000));

        case 2:
        case "end":
          return context$2$0.stop();
      }
    }, null, _this2);
  });
  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)("safari", driver));

        case 2:
          return context$2$0.abrupt("return", context$2$0.sent);

        case 3:
        case "end":
          return context$2$0.stop();
      }
    }, null, _this2);
  });

  it("should not be able to open js popup windows", function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute("window.open('/test/guinea-pig2.html', null)"));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)("I am another page title", driver, 5).should.eventually.be.rejected);

        case 4:
        case "end":
          return context$2$0.stop();
      }
    }, null, _this2);
  });
});

// minimize waiting if something goes wrong

// minimize waiting if something goes wrong
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93aW5kb3dzLWZyYW1lLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozt5QkFBa0IsZUFBZTs7OzswQkFDakIsZ0JBQWdCOzs7OzhCQUNPLG9CQUFvQjs7d0JBQzdDLFVBQVU7Ozs7QUFFeEIsUUFBUSxtQ0FBaUMsd0JBQUksTUFBTSxRQUFLLFlBQVk7QUFDbEUsTUFBTSxNQUFNLEdBQUcsNEJBQU0sSUFBSSxFQUFFO0FBQ3pCLGVBQVcsRUFBRSxRQUFRO0FBQ3JCLGdCQUFZLEVBQUUsSUFBSTtBQUNsQixxQkFBaUIsRUFBRSxJQUFJO0dBQ3hCLENBQUMsQ0FBQyxNQUFNLENBQUM7O0FBRVYsVUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7OztBQUNyQyxVQUFNLENBQUM7Ozs7OzZDQUVDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0tBQ2hDLENBQUMsQ0FBQztBQUNILGNBQVUsQ0FBQzthQUFNLGlDQUFZLFFBQVEsRUFBRSxNQUFNLENBQUM7S0FBQSxDQUFDLENBQUM7O0FBRWhELE1BQUUsQ0FBQyw4Q0FBOEMsRUFBRSxZQUFNO0FBQ3ZELGFBQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0tBQzNGLENBQUMsQ0FBQzs7OztBQUlILE1BQUUsQ0FBQyxxREFBcUQsRUFBRTtVQUNwRCxFQUFFLEVBSUYsT0FBTzs7Ozs7NkNBSkksTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDOzs7QUFBaEQsY0FBRTs7NkNBQ0EsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7Ozs7NkNBQ2hCLCtCQUFVLHlCQUF5QixFQUFFLE1BQU0sQ0FBQzs7Ozs2Q0FFOUIsTUFBTSxDQUFDLGdCQUFnQixFQUFFOzs7QUFBekMsbUJBQU87OzZDQUNMLHNCQUFFLEtBQUssQ0FBQyxJQUFJLENBQUM7Ozs7NkNBQ2IsTUFBTSxDQUFDLFdBQVcsRUFBRTs7Ozs2Q0FDcEIsc0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQzs7Ozs2Q0FDWixNQUFNLENBQUMsZ0JBQWdCLEVBQUU7Ozs2QkFBeUIsT0FBTyxDQUFDLE1BQU07NkJBQXJDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUs7OzZDQUNsRCwrQkFBVSxtQkFBbUIsRUFBRSxNQUFNLENBQUM7Ozs7Ozs7S0FDN0MsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyx1Q0FBdUMsRUFBRTtVQUN0QyxJQUFJOzs7Ozs2Q0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUM7OztBQUEzRCxnQkFBSTs7NkNBQ0YsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7Ozs7NkNBQ2xCLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLGdCQUFnQixDQUFDOzs7OzZDQUMxQyxNQUFNLENBQUMsSUFBSSxFQUFFOzs7OzZDQUNiLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLGdCQUFnQixDQUFDOzs7OzZDQUMxQyxNQUFNLENBQUMsT0FBTyxFQUFFOzs7OzZDQUNoQixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQzs7Ozs7OztLQUNqRCxDQUFDLENBQUM7OztBQUdILE1BQUUsQ0FBQyw4RkFBOEYsRUFBRTtVQUM3RixJQUFJOzs7Ozs2Q0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSx3QkFBd0IsQ0FBQzs7O0FBQXRFLGdCQUFJOzs2Q0FDRixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7Ozs2Q0FDbEIsK0JBQVUseUJBQXlCLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQzs7Ozs7OztLQUN2RCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUM7O0FBRUgsUUFBUSxtQ0FBaUMsd0JBQUksTUFBTSxvQ0FBaUMsWUFBWTs7O0FBQzlGLE1BQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QyxNQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUU7QUFDekIsZUFBVyxFQUFFLFFBQVE7QUFDckIscUJBQWlCLEVBQUUsS0FBSztHQUN6QixDQUFDLENBQUMsTUFBTSxDQUFDOztBQUVWLFFBQU0sQ0FBQzs7Ozs7MkNBRUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7R0FDaEMsQ0FBQyxDQUFDO0FBQ0gsWUFBVSxDQUFDOzs7OzsyQ0FBa0IsaUNBQVksUUFBUSxFQUFFLE1BQU0sQ0FBQzs7Ozs7Ozs7OztHQUFBLENBQUMsQ0FBQzs7QUFFNUQsSUFBRSxDQUFDLDZDQUE2QyxFQUFFOzs7OzsyQ0FDMUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyw2Q0FBNkMsQ0FBQzs7OzsyQ0FDN0QsK0JBQVUseUJBQXlCLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFFBQVE7Ozs7Ozs7R0FDcEYsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZTJlL3NhZmFyaS93aW5kb3dzLWZyYW1lLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNldHVwIGZyb20gXCIuLi9zZXR1cC1iYXNlXCI7XG5pbXBvcnQgZW52IGZyb20gJy4uL2hlbHBlcnMvZW52JztcbmltcG9ydCB7IGxvYWRXZWJWaWV3LCBzcGluVGl0bGUgfSBmcm9tIFwiLi4vaGVscGVycy93ZWJ2aWV3XCI7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5cbmRlc2NyaWJlKGBzYWZhcmkgLSB3aW5kb3dzIGFuZCBmcmFtZXMgKCR7ZW52LkRFVklDRX0pYCwgZnVuY3Rpb24gKCkge1xuICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCB7XG4gICAgYnJvd3Nlck5hbWU6ICdzYWZhcmknLFxuICAgIG5hdGl2ZVdlYlRhcDogdHJ1ZSxcbiAgICBzYWZhcmlBbGxvd1BvcHVwczogdHJ1ZVxuICB9KS5kcml2ZXI7XG5cbiAgZGVzY3JpYmUoJ3dpdGhpbiB3ZWJ2aWV3JywgZnVuY3Rpb24gKCkge1xuICAgIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgICAvLyBtaW5pbWl6ZSB3YWl0aW5nIGlmIHNvbWV0aGluZyBnb2VzIHdyb25nXG4gICAgICBhd2FpdCBkcml2ZXIuaW1wbGljaXRXYWl0KDEwMDApO1xuICAgIH0pO1xuICAgIGJlZm9yZUVhY2goKCkgPT4gbG9hZFdlYlZpZXcoXCJzYWZhcmlcIiwgZHJpdmVyKSk7XG5cbiAgICBpdChcInNob3VsZCB0aHJvdyBub3N1Y2h3aW5kb3cgaWYgdGhlcmUncyBub3Qgb25lXCIsICgpID0+IHtcbiAgICAgIHJldHVybiBkcml2ZXIuc2V0V2luZG93KCdub2V4aXN0bWFuJykuc2hvdWxkLmJlLnJlamVjdGVkV2l0aCgvd2luZG93IGNvdWxkIG5vdCBiZSBmb3VuZC8pO1xuICAgIH0pO1xuXG4gICAgLy8gdW5mb3J0dW5hdGVseSwgaU9TOCBkb2Vzbid0IHJlc3BvbmQgdG8gdGhlIGNsb3NlKCkgbWV0aG9kIG9uIHdpbmRvd1xuICAgIC8vIHRoZSB3YXkgaU9TNyBkb2VzXG4gICAgaXQoXCJzaG91bGQgYmUgYWJsZSB0byBvcGVuIGFuZCBjbG9zZSB3aW5kb3dzIEBza2lwLWlvczhcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdibGFua2xpbmsnKTtcbiAgICAgIGF3YWl0IGRyaXZlci5jbGljayhlbCk7XG4gICAgICBhd2FpdCBzcGluVGl0bGUoXCJJIGFtIGFub3RoZXIgcGFnZSB0aXRsZVwiLCBkcml2ZXIpO1xuXG4gICAgICBsZXQgaGFuZGxlcyA9IGF3YWl0IGRyaXZlci5nZXRXaW5kb3dIYW5kbGVzKCk7XG4gICAgICBhd2FpdCBCLmRlbGF5KDIwMDApO1xuICAgICAgYXdhaXQgZHJpdmVyLmNsb3NlV2luZG93KCk7XG4gICAgICBhd2FpdCBCLmRlbGF5KDMwMDApO1xuICAgICAgKGF3YWl0IGRyaXZlci5nZXRXaW5kb3dIYW5kbGVzKCkpLmxlbmd0aC5zaG91bGQuYmUuYmVsb3coaGFuZGxlcy5sZW5ndGgpO1xuICAgICAgYXdhaXQgc3BpblRpdGxlKFwiSSBhbSBhIHBhZ2UgdGl0bGVcIiwgZHJpdmVyKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgYmUgYWJsZSB0byBnbyBiYWNrIGFuZCBmb3J3YXJkJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGxpbmsgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2xpbmsgdGV4dCcsICdpIGFtIGEgbGluaycpO1xuICAgICAgYXdhaXQgZHJpdmVyLmNsaWNrKGxpbmspO1xuICAgICAgYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdvbmx5X29uX3BhZ2VfMicpO1xuICAgICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcbiAgICAgIGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnaV9hbV9hX3RleHRib3gnKTtcbiAgICAgIGF3YWl0IGRyaXZlci5mb3J3YXJkKCk7XG4gICAgICBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ29ubHlfb25fcGFnZV8yJyk7XG4gICAgfSk7XG5cbiAgICAvLyBicm9rZW4gb24gcmVhbCBkZXZpY2VzLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2FwcGl1bS9hcHBpdW0vaXNzdWVzLzUxNjdcbiAgICBpdChcInNob3VsZCBiZSBhYmxlIHRvIG9wZW4ganMgcG9wdXAgd2luZG93cyB3aXRoIHNhZmFyaUFsbG93UG9wdXBzIHNldCB0byB0cnVlIEBza2lwLXJlYWwtZGV2aWNlXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBsaW5rID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdsaW5rIHRleHQnLCAnaSBhbSBhIG5ldyB3aW5kb3cgbGluaycpO1xuICAgICAgYXdhaXQgZHJpdmVyLmNsaWNrKGxpbmspO1xuICAgICAgYXdhaXQgc3BpblRpdGxlKFwiSSBhbSBhbm90aGVyIHBhZ2UgdGl0bGVcIiwgZHJpdmVyLCAzMCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKGBzYWZhcmkgLSB3aW5kb3dzIGFuZCBmcmFtZXMgKCR7ZW52LkRFVklDRX0pIC0gd2l0aG91dCBzYWZhcmlBbGxvd1BvcHVwc2AsIGZ1bmN0aW9uICgpIHtcbiAgaWYgKHByb2Nlc3MuZW52LlRSQVZJUykgdGhpcy50aW1lb3V0KDI0MDAwMCk7XG4gIGNvbnN0IGRyaXZlciA9IHNldHVwKHRoaXMsIHtcbiAgICBicm93c2VyTmFtZTogJ3NhZmFyaScsXG4gICAgc2FmYXJpQWxsb3dQb3B1cHM6IGZhbHNlXG4gIH0pLmRyaXZlcjtcblxuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgIC8vIG1pbmltaXplIHdhaXRpbmcgaWYgc29tZXRoaW5nIGdvZXMgd3JvbmdcbiAgICBhd2FpdCBkcml2ZXIuaW1wbGljaXRXYWl0KDUwMDApO1xuICB9KTtcbiAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhcInNhZmFyaVwiLCBkcml2ZXIpKTtcblxuICBpdChcInNob3VsZCBub3QgYmUgYWJsZSB0byBvcGVuIGpzIHBvcHVwIHdpbmRvd3NcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKFwid2luZG93Lm9wZW4oJy90ZXN0L2d1aW5lYS1waWcyLmh0bWwnLCBudWxsKVwiKTtcbiAgICBhd2FpdCBzcGluVGl0bGUoXCJJIGFtIGFub3RoZXIgcGFnZSB0aXRsZVwiLCBkcml2ZXIsIDUpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
